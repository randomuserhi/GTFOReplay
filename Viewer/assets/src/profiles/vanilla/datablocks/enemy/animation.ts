import { AnimBlend, mergeAnims, ScaledAnim, type AnimFunc } from "../../library/animations/lib.js";
import { loadAllClips } from "../../library/animations/loaders.js";
import { HumanJoints } from "../../renderer/animations/human.js";
import { Datablock } from "../lib.js";

if (module.metadata.isParser) console.warn("Datablocks should not be loaded by the parser. This degrades performance greatly.");

export const EnemyAnimDatablock = new Datablock<EnemyAnimationClips | EnemyAnimations, AnimFunc<HumanJoints>>();


export const animVelocity = {
    x: 0,
    y: 0
};

export const animCrouch = {
    x: 0,
    y: 0
};

const enemyAnimationClipNames = [
    "RU_Walk_Bwd",
    "RU_Walk_Fwd",
    "RU_Walk_Lt",
    "RU_Walk_Rt",
    "RU_Run_Bwd",
    "RU_Run_Fwd",
    "RU_Run_Lt",
    "RU_Run_Rt",
    "Idle_Active",
    "LO_Walk_Bwd_A",
    "LO_Walk_Fwd_A",
    "LO_Walk_Lt_A",
    "LO_Walk_Rt_A",
    "LO_Run_Bwd_A",
    "LO_Run_Fwd_A",
    "LO_Run_Lt_A",
    "LO_Run_Rt_A",
    "LO_Idle_A",
    "FD_Walk_Bwd_A",
    "FD_Walk_Fwd_A",
    "FD_Walk_Lt_B",
    "FD_Walk_Rt_A",
    "FD_Run_Bwd_A",
    "FD_Run_Fwd_A",
    "FD_Run_Lt_A",
    "FD_Run_Rt_A",
    "FD_Idle_A",
    "CA_Walk_Bwd_A",
    "CA_Walk_Fwd_A",
    "CA_Walk_Lt_A",
    "CA_Walk_Rt_A",
    "CA_Idle_A",
    "CF_Walk_Bwd_A",
    "CF_Walk_Fwd_A",
    "CF_Walk_Lt_A",
    "CF_Walk_Rt_A",
    "CF_Idle_A",
    "CR_Walk_Bwd",
    "CR_Walk_Fwd",
    "CR_Walk_Lt",
    "CR_Walk_Rt",
    "CR_Run_Bwd",
    "CR_Run_Fwd",
    "CR_Run_Lt",
    "CR_Run_Rt",
    "CR_Idle_A",
    "Enemy_Big_Idle_A",
    "Enemy_Big_Run_Bwd_A",
    "Enemy_Big_Run_Bwd_Left_A",
    "Enemy_Big_Run_Bwd_Right_A",
    "Enemy_Big_Run_Fwd_A",
    "Enemy_Big_Run_Fwd_Left_A",
    "Enemy_Big_Run_Fwd_Right_A",
    "Enemy_Big_Run_Left_A",
    "Enemy_Big_Run_Right_A",
    "Enemy_Big_Walk_Bwd_A",
    "Enemy_Big_Walk_Bwd_Left_A",
    "Enemy_Big_Walk_Bwd_Right_A",
    "Enemy_Big_Walk_Fwd_A",
    "Enemy_Big_Walk_Fwd_Left_A",
    "Enemy_Big_Walk_Fwd_Right_A",
    "Enemy_Big_Walk_Left_A",
    "Enemy_Big_Walk_Right_A",
    "Monster_Walk_Bwd",
    "Monster_Walk_Fwd",
    "Monster_Walk_Left",
    "Monster_Walk_Left_135",
    "Monster_Walk_Left_45",
    "Monster_Walk_Right",
    "Monster_Walk_Right_135",
    "Monster_Walk_Right_45",
    "Monster_Idle_01",
    "PO_WalkBwd",
    "PO_WalkFwd",
    "PO_WalkLeft",
    "PO_WalkRight",
    "PO_JogBwd",
    "PO_JogFwd",
    "PO_JogLeft",
    "PO_JogRight",
    "PO_RunFwd",
    "PO_IdleCombat",
    "LO_Ability_Fire_In_A",
    "LO_Ability_Fire_In_B",
    "LO_Ability_Fire_In_C",
    "CA_Ability_Fire_In_A",
    "CA_Ability_Fire_In_B",
    "CF_Ability_Fire_In_A",
    "CF_Ability_Fire_In_B",
    "FD_Ability_Fire_In_A",
    "FD_Ability_Fire_In_B",
    "CR_Ability_Fire_In_A",
    "CR_Ability_Fire_In_B",
    "CR_Ability_Fire_In_C",
    "Ability_Fire_0_Start",
    "Ability_Fire_2_Start",
    "Enemy_Big_Fire_In_A",
    "Enemy_Big_Fire_In_B",
    "Monster_TentacleStart",
    "RU_Hit_Heavy_Bwd_A",
    "RU_Hit_Heavy_Bwd_B",
    "RU_Hit_Heavy_Bwd_C",
    "RU_Hit_Heavy_Bwd_Turn_A",
    "RU_Hit_Heavy_Fwd_A",
    "RU_Hit_Heavy_Fwd_B",
    "RU_Hit_Heavy_Fwd_C",
    "RU_Hit_Heavy_Lt_A",
    "RU_Hit_Heavy_Lt_B",
    "RU_Hit_Heavy_Lt_C",
    "RU_Hit_Heavy_Rt_A",
    "RU_Hit_Heavy_Rt_B",
    "RU_Hit_Heavy_Rt_C",
    "RU_Hit_Light_Bwd_A",
    "RU_Hit_Light_Bwd_B",
    "RU_Hit_Light_Bwd_C",
    "RU_Hit_Light_Fwd_A",
    "RU_Hit_Light_Fwd_B",
    "RU_Hit_Light_Fwd_C",
    "RU_Hit_Light_Lt_A",
    "RU_Hit_Light_Lt_B",
    "RU_Hit_Light_Lt_C",
    "RU_Hit_Light_Rt_A",
    "RU_Hit_Light_Rt_B",
    "RU_Hit_Light_Rt_C",
    "LO_Hit_Heavy_Bwd_A",
    "LO_Hit_Heavy_Fwd_A",
    "LO_Hit_Heavy_Fwd_B",
    "LO_Hit_Heavy_Fwd_C",
    "LO_Hit_Heavy_Lt_A",
    "LO_Hit_Heavy_Lt_B",
    "LO_Hit_Heavy_Lt_C",
    "LO_Hit_Heavy_Rt_A",
    "LO_Hit_Heavy_Rt_B",
    "LO_Hit_Heavy_Rt_C",
    "LO_Hit_Light_Bwd_A",
    "LO_Hit_Light_Bwd_b",
    "LO_Hit_Light_Bwd_C",
    "LO_Hit_Light_Bwd_Turn_A",
    "LO_Hit_Light_Fwd_A",
    "LO_Hit_Light_Fwd_B",
    "LO_Hit_Light_Fwd_C",
    "LO_Hit_Light_Lt_A",
    "LO_Hit_Light_Lt_B",
    "LO_Hit_Light_Lt_C",
    "LO_Hit_Light_Rt_A",
    "LO_Hit_Light_Rt_B",
    "LO_Hit_Light_Rt_C",
    "LO_Hit_Light_Rt_D",
    "CR_Hit_Heavy_Bwd_A_Turn",
    "CR_Hit_Heavy_Bwd_B",
    "CR_Hit_Heavy_Bwd_C_Turn",
    "CR_Hit_Heavy_Bwd_D_0",
    "CR_Hit_Heavy_Bwd_D",
    "CR_Hit_Heavy_Fwd_A",
    "CR_Hit_Heavy_Fwd_B",
    "CR_Hit_Heavy_Fwd_C",
    "CR_Hit_Heavy_Lt_A",
    "CR_Hit_Heavy_Lt_B",
    "CR_Hit_Heavy_Lt_C",
    "CR_Hit_Heavy_Rt_A",
    "CR_Hit_Heavy_Rt_B",
    "CR_Hit_Heavy_Rt_C",
    "CR_Hit_Heavy_Rt_C_0",
    "CR_Hit_Light_Bwd_A",
    "CR_Hit_Light_Bwd_B",
    "CR_Hit_Light_Bwd_C",
    "CR_Hit_Light_Bwd_D",
    "CR_Hit_Light_Fwd_A",
    "CR_Hit_Light_Fwd_B",
    "CR_Hit_Light_Fwd_C",
    "CR_Hit_Light_Lt_A",
    "CR_Hit_Light_Lt_B",
    "CR_Hit_Light_Lt_C",
    "CR_Hit_Light_Rt_A",
    "CR_Hit_Light_Rt_B",
    "CR_Hit_Light_Rt_C",
    "FD_Hit_Heavy_Bwd_A",
    "FD_Hit_Heavy_Bwd_B",
    "FD_Hit_Heavy_Bwd_C",
    "FD_Hit_Heavy_Fwd_A",
    "FD_Hit_Heavy_Fwd_B",
    "FD_Hit_Heavy_Fwd_C",
    "FD_Hit_Heavy_Lt_A",
    "FD_Hit_Heavy_Lt_B",
    "FD_Hit_Heavy_Lt_C",
    "FD_Hit_Heavy_Rt_A",
    "FD_Hit_Heavy_Rt_B",
    "FD_Hit_Heavy_Rt_C",
    "FD_Hit_Light_Bwd_A",
    "FD_Hit_Light_Bwd_B",
    "FD_Hit_Light_Bwd_C",
    "FD_Hit_Light_Fwd_A",
    "FD_Hit_Light_Fwd_B",
    "FD_Hit_Light_Fwd_C",
    "FD_Hit_Light_Lt_A",
    "FD_Hit_Light_Lt_B",
    "FD_Hit_Light_Lt_C",
    "FD_Hit_Light_Rt_A",
    "FD_Hit_Light_Rt_B",
    "FD_Hit_Light_Rt_C",
    "CA_Hit_Heavy_Bwd_A",
    "CA_Hit_Heavy_Fwd_B",
    "CA_Hit_Heavy_Fwd_C",
    "CA_Hit_Heavy_Lt_A",
    "CA_Hit_Heavy_Lt_B",
    "CA_Hit_Heavy_Rt_A",
    "CA_Hit_Heavy_Rt_B",
    "CA_Hit_Light_Bwd_A",
    "CA_Hit_Light_Bwd_B",
    "CA_Hit_Light_Fwd_A",
    "CA_Hit_Light_Fwd_B",
    "CA_Hit_Light_Lt_A",
    "CA_Hit_Light_Lt_B",
    "CA_Hit_Light_Rt_A",
    "CA_Hit_Light_Rt_B",
    "CF_Hit_Light_A",
    "CF_Hit_Light_B",
    "Enemy_Big_Hit_Back_A",
    "Enemy_Big_Hit_Back_B",
    "Enemy_Big_Hit_Front_A",
    "Enemy_Big_Hit_Front_B",
    "Enemy_Big_Hit_Left_A",
    "Enemy_Big_Hit_Left_B",
    "Enemy_Big_Hit_Right_A",
    "Enemy_Big_Hit_Right_B",
    "Monster_Hit_Back_01",
    "Monster_Hit_Back_02",
    "Monster_Hit_Back_04",
    "Monster_Hit_Front_01",
    "Monster_Hit_Front_02",
    "Monster_Hit_Front_03",
    "Monster_Hit_Front_04",
    "Monster_Hit_Leg_01",
    "Monster_Hit_Leg_02",
    "Monster_Hit_Leg_03",
    "Monster_Hit_Right_01",
    "Melee_Sequence_Fwd",
    "RU_Melee_Sequence_A",
    "Monster_Attack_06_shortened",
    "Monster_Attack_180_L",
    "RU_Jump_In",
    "RU_Jump_Air_TimeBlend",
    "RU_Jump_Out",
    "CA_Jump_Start",
    "CA_Jump_Air",
    "CA_Jump_Land",
    "CR_Jump_Start",
    "CR_Jump_Air",
    "CR_Jump_Land",
    "CF_Jump_Start",
    "CF_Jump_Air",
    "CF_Jump_Land",
    "FD_Jump_Start",
    "FD_Jump_Air",
    "FD_Jump_Land",
    "LO_Jump_Start",
    "LO_Jump_Air",
    "LO_Jump_Land",
    "Enemy_Big_Jump_Start_A",
    "Enemy_Big_Jump_Loop_A",
    "Enemy_Big_Jump_Land_A",
    "Giant_Jump_Start",
    "Monster_Fall_Landing_01",
    "RU_Scream_A",
    "RU_Scream_B",
    "RU_Scream_C",
    "CA_Scream_A",
    "CA_Scream_B",
    "CR_Scream_A",
    "CR_Scream_B",
    "CR_Scream_C",
    "CF_Scream",
    "FD_Scream_A",
    "FD_Scream_B",
    "FD_Scream_C",
    "Monster_Taunt_01",
    "LO_Scream_A",
    "LO_Scream_B",
    "LO_Scream_C",
    "Enemy_Big_Detect_Front_A",
    "Enemy_Big_Detect_Front_B",
    "Enemy_Big_Hibernate_In_A",
    "Enemy_Big_Hibernate_Loop_A",
    "CA_Hibernate_In",
    "CA_Hibernate_Detect_Loop",
    "CA_Hibernate_Loop_A",
    "CR_Hibernate_In",
    "CR_Hibernate_Detect_Loop",
    "CR_Hibernate_Loop",
    "CF_Hibernate_In",
    "CF_Hibernate_Detect_Loop",
    "CF_Hibernate_Loop_A",
    "FD_Hibernate_In",
    "FD_Hibernate_Detect_Loop",
    "FD_Hibernate_Loop",
    "LO_Hibernate_In_A",
    "LO_Hibernate_Detect_Loop",
    "LO_Hibernate_Loop",
    "RU_Hibernate_In",
    "Ru_Hibernate_Detect_Loop_0",
    "RU_Hibernate_Loop_0",
    "CF_Birther_Hibernate_In",
    "CF_Birther_Hibernate_Loop",
    "Enemy_Big_Hibernate_Heartbeat_1_A",
    "Enemy_Big_Hibernate_Heartbeat_2_A",
    "Enemy_Big_Hibernate_Heartbeat_3_A",
    "Enemy_Big_Hibernate_Heartbeat_4_A",
    "Enemy_Big_Hibernate_Heartbeat_5_A",
    "CA_Hibernate_Heartbeat_A",
    "CA_Hibernate_Heartbeat_B",
    "CA_Hibernate_Heartbeat_C",
    "CA_Hibernate_Heartbeat_D",
    "CA_Hibernate_Heartbeat_E",
    "CR_Hibernate_Heartbeat_A",
    "CR_Hibernate_Heartbeat_B",
    "CR_Hibernate_Heartbeat_C",
    "CR_Hibernate_Heartbeat_D",
    "CR_Hibernate_Heartbeat_E",
    "CF_Hibernate_Heartbeat_A",
    "CF_Hibernate_Heartbeat_B",
    "CF_Hibernate_Heartbeat_C",
    "CF_Hibernate_Heartbeat_D",
    "CF_Hibernate_Heartbeat_E",
    "FD_Hibernate_Heartbeat_A",
    "FD_Hibernate_Heartbeat_B",
    "FD_Hibernate_Heartbeat_C",
    "FD_Hibernate_Heartbeat_D",
    "FD_Hibernate_Heartbeat_E",
    "LO_Hibernate_Heartbeat_A",
    "LO_Hibernate_Heartbeat_B",
    "LO_Hibernate_Heartbeat_C",
    "LO_Hibernate_Heartbeat_D",
    "LO_Hibernate_Heartbeat_E",
    "RU_Hibernate_Heartbeat_A",
    "RU_Hibernate_Heartbeat_A_0",
    "RU_Hibernate_Heartbeat_B",
    "RU_Hibernate_Heartbeat_B_0",
    "RU_Hibernate_Heartbeat_C",
    "RU_Hibernate_Heartbeat_C_0",
    "RU_Hibernate_Heartbeat_D",
    "RU_Hibernate_Heartbeat_D_0",
    "RU_Hibernate_Heartbeat_E",
    "RU_Hibernate_Heartbeat_E_0",
    "CF_Birther_Heartbeat",
    "CR_Hibernate_Wakeup_A",
    "CR_Hibernate_Wakeup_B",
    "CR_Hibernate_Wakeup_C",
    "CR_Hibernate_Wakeup_D",
    "CR_Hibernate_Wakeup_Turn_A",
    "LO_Hibernate_Wakeup_A",
    "LO_Hibernate_Wakeup_B",
    "LO_Hibernate_Wakeup_Fwd_C",
    "LO_Hibernate_Wakeup_Fwd_D",
    "LO_Hibernate_Wakeup_Turn_A",
    "CA_Hibernate_Wakeup_A",
    "CA_Hibernate_Wakeup_Turn_A",
    "RU_Hibernate_Wakeup_A_0",
    "RU_Hibernate_Wakeup_B_0",
    "RU_Hibernate_Wakeup_C_0",
    "RU_Hibernate_Wakeup_Turn_A",
    "CF_Hibernate_Wakeup_A",
    "CF_Hibernate_Wakeup_Turn_A",
    "Monster_Turn_Left_180",
    "Enemy_Big_Hibernate_Wakeup_180_B",
    "Enemy_Big_Hibernate_Wakeup_A",
    "FD_Hibernate_Wakeup_A",
    "FD_Hibernate_Wakeup_B",
    "FD_Hibernate_Wakeup_C",
    "FD_Hibernate_Wakeup_Turn_A",
    "RU_Hibernate_Wakeup_A",
    "RU_Hibernate_Wakeup_B",
    "RU_Hibernate_Wakeup_C",
    "PO_ConsumeAttack",
    "PO_ConsumeStart",
    "PO_ConsumeEnd",
    "PO_ConsumeLoop",
    "PO_SpitOut",
    "CA_Ability_Use_In_A",
    "CA_Ability_Use_Loop_A",
    "CA_Ability_Use_Out_A",
    "RU_Ability_Use_In_a",
    "RU_Ability_Use_Loop_a",
    "RU_Ability_Use_Out_a",
    "LO_Ability_Use_In_A",
    "LO_Ability_Use_Loop_A",
    "LO_Ability_Use_Out_A",
    "CR_Ability_Use_In_A",
    "CR_Ability_Use_Loop_A",
    "CR_Ability_Use_Out_A",
    "CF_Ability_Use_In_A",
    "CF_Ability_Use_Loop_A",
    "CF_Ability_Use_Out_A",
    "FD_Ability_Use_In_A",
    "FD_Ability_Use_Loop_A",
    "FD_Ability_Use_Out_A",
] as const;
export type EnemyAnimationClips = typeof enemyAnimationClipNames[number];
const enemyAnimationClips = await loadAllClips(HumanJoints, enemyAnimationClipNames);

const enemyRunnerMovement = new AnimBlend(HumanJoints, [
    { anim: enemyAnimationClips.RU_Walk_Fwd, x: 0, y: 2.2 },
    { anim: enemyAnimationClips.RU_Walk_Bwd, x: 0, y: -2.5},
    { anim: enemyAnimationClips.RU_Walk_Lt, x: -2.5, y: 0 },
    { anim: enemyAnimationClips.RU_Walk_Rt, x: 2.5, y: 0},
    { anim: enemyAnimationClips.RU_Run_Fwd, x: 0, y: 7 },
    { anim: enemyAnimationClips.RU_Run_Bwd, x: 0, y: -4.5 },
    { anim: enemyAnimationClips.RU_Run_Lt, x: -4.5, y: 0 },
    { anim: enemyAnimationClips.RU_Run_Rt, x: 4.5, y: 0},
    { anim: enemyAnimationClips.Idle_Active, x: 0, y: 0},
], animVelocity);

const enemyLowMovement = new AnimBlend(HumanJoints, [
    { anim: enemyAnimationClips.LO_Walk_Fwd_A, x: 0, y: 2.2 },
    { anim: enemyAnimationClips.LO_Walk_Bwd_A, x: 0, y: -2.5},
    { anim: enemyAnimationClips.LO_Walk_Lt_A, x: -2.5, y: 0 },
    { anim: enemyAnimationClips.LO_Walk_Rt_A, x: 2.5, y: 0},
    { anim: enemyAnimationClips.LO_Run_Fwd_A, x: 0, y: 7 },
    { anim: enemyAnimationClips.LO_Run_Bwd_A, x: 0, y: -4.5 },
    { anim: enemyAnimationClips.LO_Run_Lt_A, x: -4.5, y: 0 },
    { anim: enemyAnimationClips.LO_Run_Rt_A, x: 4.5, y: 0},
    { anim: enemyAnimationClips.LO_Idle_A, x: 0, y: 0},
], animVelocity);

const enemyFiddleMovement = new AnimBlend(HumanJoints, [
    { anim: enemyAnimationClips.FD_Walk_Fwd_A, x: 0, y: 1.35 },
    { anim: enemyAnimationClips.FD_Walk_Bwd_A, x: 0, y: -1},
    { anim: enemyAnimationClips.FD_Walk_Lt_B, x: -1, y: 0 },
    { anim: enemyAnimationClips.FD_Walk_Rt_A, x: 1, y: 0},
    { anim: enemyAnimationClips.FD_Run_Fwd_A, x: 0, y: 4 },
    { anim: enemyAnimationClips.FD_Run_Bwd_A, x: 0, y: -2.6 },
    { anim: enemyAnimationClips.FD_Run_Lt_A, x: -2.6, y: 0 },
    { anim: enemyAnimationClips.FD_Run_Rt_A, x: 2.6, y: 0},
    { anim: enemyAnimationClips.FD_Idle_A, x: 0, y: 0},
], animVelocity);

const enemyCrawlMovement = new AnimBlend(HumanJoints, [
    { anim: enemyAnimationClips.CA_Walk_Fwd_A, x: 0, y: 1.2 },
    { anim: enemyAnimationClips.CA_Walk_Fwd_A, x: 0, y: 2.5, timescale: 1.5 },
    { anim: enemyAnimationClips.CA_Walk_Fwd_A, x: 0, y: 4, timescale: 2 },
    { anim: enemyAnimationClips.CA_Walk_Bwd_A, x: 0, y: -1.2},
    { anim: enemyAnimationClips.CA_Walk_Bwd_A, x: 0, y: -2.5, timescale: 1.5 },
    { anim: enemyAnimationClips.CA_Walk_Bwd_A, x: 0, y: -4, timescale: 2 },
    { anim: enemyAnimationClips.CA_Walk_Lt_A, x: -1.1, y: 0 },
    { anim: enemyAnimationClips.CA_Walk_Rt_A, x: 1.1, y: 0 },
    { anim: enemyAnimationClips.CA_Walk_Lt_A, x: -3.5, y: 0, timescale: 1.5 },
    { anim: enemyAnimationClips.CA_Walk_Rt_A, x: 3.5, y: 0, timescale: 1.5 },
    { anim: enemyAnimationClips.CA_Idle_A, x: 0, y: 0},
], animVelocity);

const enemyCrawlFlipMovement = new AnimBlend(HumanJoints, [
    { anim: enemyAnimationClips.CF_Walk_Fwd_A, x: 0, y: 1 },
    { anim: enemyAnimationClips.CF_Walk_Fwd_A, x: 0, y: 3, timescale: 1.5 },
    { anim: enemyAnimationClips.CF_Walk_Bwd_A, x: 0, y: -1},
    { anim: enemyAnimationClips.CF_Walk_Bwd_A, x: 0, y: -3, timescale: 1.5 },
    { anim: enemyAnimationClips.CF_Walk_Lt_A, x: -1.1, y: 0 },
    { anim: enemyAnimationClips.CF_Walk_Rt_A, x: 1.1, y: 0 },
    { anim: enemyAnimationClips.CF_Walk_Lt_A, x: -2.5, y: 0, timescale: 1.5 },
    { anim: enemyAnimationClips.CF_Walk_Rt_A, x: 2.5, y: 0, timescale: 1.5 },
    { anim: enemyAnimationClips.CF_Idle_A, x: 0, y: 0},
], animVelocity);

const enemyCrippleMovement = new AnimBlend(HumanJoints, [
    { anim: enemyAnimationClips.CR_Walk_Fwd, x: 0, y: 1.6 },
    { anim: enemyAnimationClips.CR_Walk_Bwd, x: 0, y: -1.2},
    { anim: enemyAnimationClips.CR_Walk_Lt, x: -1.2, y: 0 },
    { anim: enemyAnimationClips.CR_Walk_Rt, x: 1.2, y: 0},
    { anim: enemyAnimationClips.CR_Run_Fwd, x: 0, y: 4.6 },
    { anim: enemyAnimationClips.CR_Run_Bwd, x: 0, y: -3.3 },
    { anim: enemyAnimationClips.CR_Run_Lt, x: -3.3, y: 0 },
    { anim: enemyAnimationClips.CR_Run_Rt, x: 3.3, y: 0},
    { anim: enemyAnimationClips.CR_Idle_A, x: 0, y: 0},
], animVelocity);

const enemyBigMovement = new AnimBlend(HumanJoints, [
    { anim: enemyAnimationClips.Enemy_Big_Idle_A, x: 0, y: 0 },
    { anim: enemyAnimationClips.Enemy_Big_Walk_Fwd_A, x: 0, y: 1 },
    { anim: enemyAnimationClips.Enemy_Big_Walk_Bwd_A, x: 0, y: -1 },
    { anim: enemyAnimationClips.Enemy_Big_Walk_Left_A, x: -1, y: 0 },
    { anim: enemyAnimationClips.Enemy_Big_Walk_Right_A, x: 1, y: 0 },
    { anim: enemyAnimationClips.Enemy_Big_Walk_Fwd_Left_A, x: -1, y: 1 },
    { anim: enemyAnimationClips.Enemy_Big_Walk_Fwd_Right_A, x: 1, y: 1 },
    { anim: enemyAnimationClips.Enemy_Big_Walk_Bwd_Left_A, x: -1, y: -1 },
    { anim: enemyAnimationClips.Enemy_Big_Walk_Bwd_Right_A, x: 1, y: -1 },
    { anim: enemyAnimationClips.Enemy_Big_Run_Fwd_A, x: 0, y: 3 },
    { anim: enemyAnimationClips.Enemy_Big_Run_Bwd_A, x: 0, y: -3 },
    { anim: enemyAnimationClips.Enemy_Big_Run_Left_A, x: -2.5, y: 0 },
    { anim: enemyAnimationClips.Enemy_Big_Run_Right_A, x: 2.5, y: 0 },
    { anim: enemyAnimationClips.Enemy_Big_Run_Fwd_Left_A, x: -2.5, y: 2.5 },
    { anim: enemyAnimationClips.Enemy_Big_Run_Fwd_Right_A, x: 2.5, y: 2.5 },
    { anim: enemyAnimationClips.Enemy_Big_Run_Bwd_Left_A, x: -2.5, y: -2.5 },
    { anim: enemyAnimationClips.Enemy_Big_Run_Bwd_Right_A, x: 2.5, y: -2.5 },
], animVelocity);

const enemyGiantMovement = new AnimBlend(HumanJoints, [
    { anim: enemyAnimationClips.Monster_Idle_01, x: 0, y: 0 },
    { anim: enemyAnimationClips.Monster_Walk_Fwd, x: 0, y: 1.2 },
    { anim: enemyAnimationClips.Monster_Walk_Fwd, x: 0, y: 2.6, timescale: 1.5 },
    { anim: enemyAnimationClips.Monster_Walk_Bwd, x: 0, y: -1.2 },
    { anim: enemyAnimationClips.Monster_Walk_Bwd, x: 0, y: -2.6, timescale: 1.5 },
    { anim: enemyAnimationClips.Monster_Walk_Right, x: 1.2, y: 0 },
    { anim: enemyAnimationClips.Monster_Walk_Right, x: 2.6, y: 0, timescale: 1.5 },
    { anim: enemyAnimationClips.Monster_Walk_Left, x: -1.2, y: 0 },
    { anim: enemyAnimationClips.Monster_Walk_Left, x: -2.6, y: 0, timescale: 1.5 },
    { anim: enemyAnimationClips.Monster_Walk_Left_135, x: -1.1, y: -1.1 },
    { anim: enemyAnimationClips.Monster_Walk_Left_135, x: -2.6, y: -2.6, timescale: 1.5 },
    { anim: enemyAnimationClips.Monster_Walk_Left_45, x: -1.1, y: 1.1 },
    { anim: enemyAnimationClips.Monster_Walk_Left_45, x: -2.6, y: 2.6, timescale: 1.5 },
    { anim: enemyAnimationClips.Monster_Walk_Right_135, x: 1.1, y: -1.1 },
    { anim: enemyAnimationClips.Monster_Walk_Right_135, x: 2.6, y: -2.6, timescale: 1.5 },
    { anim: enemyAnimationClips.Monster_Walk_Right_45, x: 1.1, y: 1.1 },
    { anim: enemyAnimationClips.Monster_Walk_Right_45, x: 2.6, y: 2.6, timescale: 1.5 },
], animVelocity);

const enemyPouncerMovement = new AnimBlend(HumanJoints, [
    { anim: enemyAnimationClips.PO_IdleCombat, x: 0, y: 0 },
    { anim: enemyAnimationClips.PO_JogFwd, x: 0, y: 4.5 },
    { anim: enemyAnimationClips.PO_JogBwd, x: 0, y: -2.8 },
    { anim: enemyAnimationClips.PO_JogLeft, x: -2.8, y: -1.2 },
    { anim: enemyAnimationClips.PO_JogRight, x: -2.8, y: -1.2 },
    { anim: enemyAnimationClips.PO_RunFwd, x: 0, y: 10.5 },
    { anim: enemyAnimationClips.PO_WalkFwd, x: 0, y: 1.2 },
    { anim: enemyAnimationClips.PO_WalkBwd, x: 0, y: -1.2 },
    { anim: enemyAnimationClips.PO_WalkLeft, x: -1.2, y: 0 },
    { anim: enemyAnimationClips.PO_WalkRight, x: 1.2, y: 0 },
], animVelocity);

export const animDetection = { x: 0, y: 0 };

const CA_HibernateDetect = new AnimBlend(HumanJoints, [
    { anim: enemyAnimationClips.CA_Hibernate_Loop_A, x: 0, y: 0 },
    { anim: enemyAnimationClips.CA_Hibernate_Detect_Loop, x: 1, y: 0, timescale: 0.2 },
], animDetection);

const CR_HibernateDetect = new AnimBlend(HumanJoints, [
    { anim: enemyAnimationClips.CR_Hibernate_Loop, x: 0, y: 0 },
    { anim: enemyAnimationClips.CR_Hibernate_Detect_Loop, x: 1, y: 0, timescale: 0.2 },
], animDetection);

const CF_HibernateDetect = new AnimBlend(HumanJoints, [
    { anim: enemyAnimationClips.CF_Hibernate_Loop_A, x: 0, y: 0 },
    { anim: enemyAnimationClips.CF_Hibernate_Detect_Loop, x: 1, y: 0, timescale: 0.2 },
], animDetection);

const FD_HibernateDetect = new AnimBlend(HumanJoints, [
    { anim: enemyAnimationClips.FD_Hibernate_Loop, x: 0, y: 0 },
    { anim: enemyAnimationClips.FD_Hibernate_Detect_Loop, x: 1, y: 0, timescale: 0.2 },
], animDetection);

const LO_HibernateDetect = new AnimBlend(HumanJoints, [
    { anim: enemyAnimationClips.LO_Hibernate_Loop, x: 0, y: 0 },
    { anim: enemyAnimationClips.LO_Hibernate_Detect_Loop, x: 1, y: 0, timescale: 0.2 },
], animDetection);

const RU_HibernateDetect = new AnimBlend(HumanJoints, [
    { anim: enemyAnimationClips.RU_Hibernate_Loop_0, x: 0, y: 0 },
    { anim: enemyAnimationClips.Ru_Hibernate_Detect_Loop_0, x: 1, y: 0, timescale: 0.2 },
], animDetection);

const RU_Melee_Sequence_A_Fast = new ScaledAnim(HumanJoints, enemyAnimationClips.RU_Melee_Sequence_A, 2);

/*const LO_Ability_Fire_A = mergeAnims(enemyAnimationClips.LO_Ability_Fire_In_A, enemyAnimationClips.LO_Ability_Fire_Out_A);
const LO_Ability_Fire_B = mergeAnims(enemyAnimationClips.LO_Ability_Fire_In_B, enemyAnimationClips.LO_Ability_Fire_Out_B);
const LO_Ability_Fire_C = mergeAnims(enemyAnimationClips.LO_Ability_Fire_In_C, enemyAnimationClips.LO_Ability_Fire_Out_C);
const CA_Ability_Fire_A = mergeAnims(enemyAnimationClips.CA_Ability_Fire_In_A, enemyAnimationClips.CA_Ability_Fire_Out_A);
const CA_Ability_Fire_B = mergeAnims(enemyAnimationClips.CA_Ability_Fire_In_B, enemyAnimationClips.CA_Ability_Fire_Out_B);
const CF_Ability_Fire_A = mergeAnims(enemyAnimationClips.CF_Ability_Fire_In_A, enemyAnimationClips.CF_Ability_Fire_Out_A);
const CF_Ability_Fire_B = mergeAnims(enemyAnimationClips.CF_Ability_Fire_In_B, enemyAnimationClips.CF_Ability_Fire_Out_B);
const FD_Ability_Fire_A = mergeAnims(enemyAnimationClips.FD_Ability_Fire_In_A, enemyAnimationClips.FD_Ability_Fire_Out_A);
const FD_Ability_Fire_B = mergeAnims(enemyAnimationClips.FD_Ability_Fire_In_B, enemyAnimationClips.FD_Ability_Fire_Out_B);
const CR_Ability_Fire_A = mergeAnims(enemyAnimationClips.CR_Ability_Fire_In_A, enemyAnimationClips.CR_Ability_Fire_Out_A);
const CR_Ability_Fire_B = mergeAnims(enemyAnimationClips.CR_Ability_Fire_In_B, enemyAnimationClips.CR_Ability_Fire_Out_B);
const CR_Ability_Fire_C = mergeAnims(enemyAnimationClips.CR_Ability_Fire_In_C, enemyAnimationClips.CR_Ability_Fire_Out_C);
const Ability_Fire_0 = mergeAnims(enemyAnimationClips.Ability_Fire_0_Start, enemyAnimationClips.Ability_Fire_0_End);
const Ability_Fire_2 = mergeAnims(enemyAnimationClips.Ability_Fire_2_Start, enemyAnimationClips.Ability_Fire_2_End);
const Enemy_Big_Fire_A = mergeAnims(enemyAnimationClips.Enemy_Big_Fire_In_A, enemyAnimationClips.Enemy_Big_Fire_End_A);
const Enemy_Big_Fire_B = mergeAnims(enemyAnimationClips.Enemy_Big_Fire_In_B, enemyAnimationClips.Enemy_Big_Fire_End_B);
const Monster_Tentacle = mergeAnims(enemyAnimationClips.Monster_TentacleStart, enemyAnimationClips.Monster_TentacleEnd);*/

const PO_Consume = new ScaledAnim(HumanJoints, mergeAnims(
    enemyAnimationClips.PO_ConsumeStart,
    enemyAnimationClips.PO_ConsumeEnd,
), 1.5);

const PO_SpitOut_Fast = new ScaledAnim(HumanJoints, enemyAnimationClips.PO_SpitOut, 1.5);

const enemyAnimations = {
    enemyRunnerMovement,
    enemyLowMovement,
    enemyFiddleMovement,
    enemyCrawlMovement,
    enemyCrawlFlipMovement,
    enemyCrippleMovement,
    enemyBigMovement,
    enemyGiantMovement,
    enemyPouncerMovement,
    CA_HibernateDetect,
    CR_HibernateDetect,
    CF_HibernateDetect,
    FD_HibernateDetect,
    LO_HibernateDetect,
    RU_HibernateDetect,
    RU_Melee_Sequence_A_Fast,
    PO_Consume,
    PO_SpitOut_Fast,
    /*LO_Ability_Fire_A,
    LO_Ability_Fire_B,
    LO_Ability_Fire_C,
    CA_Ability_Fire_A,
    CA_Ability_Fire_B,
    CF_Ability_Fire_A,
    CF_Ability_Fire_B,
    FD_Ability_Fire_A,
    FD_Ability_Fire_B,
    CR_Ability_Fire_A,
    CR_Ability_Fire_B,
    CR_Ability_Fire_C,
    Ability_Fire_0,
    Ability_Fire_2,
    Enemy_Big_Fire_A,
    Enemy_Big_Fire_B,
    Monster_Tentacle,*/
} as const;
export type EnemyAnimations = keyof typeof enemyAnimations;

for (const [key, anim] of [...Object.entries(enemyAnimations), ...Object.entries(enemyAnimationClips)]) {
    if (EnemyAnimDatablock.has(key as any)) throw new Error(`Duplicate clip '${key}' being loaded.`);
    EnemyAnimDatablock.set(key as any, anim);
}